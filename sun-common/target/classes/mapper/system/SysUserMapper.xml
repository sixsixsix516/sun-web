<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sixsixsix516.common.mapper.system.SysUserMapper">

	<resultMap type="SysUser" id="SysUserResult">
		<id     property="userId"       column="user_id"      />
		<result property="realname"     column="realname"    />
		<result property="email"        column="email"        />
		<result property="phone"  		column="phone"  />
		<result property="sex"          column="sex"          />
		<result property="avatar"       column="avatar"       />
		<result property="password"     column="password"     />
		<result property="status"       column="status"       />
		<result property="loginIp"      column="login_ip"     />
		<result property="loginDate"    column="login_date"   />
		<result property="createBy"     column="create_by"    />
		<result property="createTime"   column="create_time"  />
		<result property="updateBy"     column="update_by"    />
		<result property="updateTime"   column="update_time"  />
		<result property="remark"       column="remark"       />
		<collection  property="roles"   javaType="java.util.List"   resultMap="RoleResult" />
	</resultMap>

	<resultMap id="RoleResult" type="SysRole">
		<id     property="roleId"       column="role_id"        />
		<result property="roleName"     column="role_name"      />
		<result property="roleSort"     column="role_sort"      />
		<result property="status"       column="role_status"    />
	</resultMap>

	<sql id="selectUserVo">
        select u.user_id, u.realname, u.email, u.avatar, u.phone, u.password, u.sex, u.status, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark,
        r.role_id, r.role_name, r.role_sort, r.status as role_status
        from sys_user u
		    left join sys_user_role ur on u.user_id = ur.user_id
		    left join sys_role r on r.role_id = ur.role_id
    </sql>

    <select id="listUser" parameterType="SysUser" resultMap="SysUserResult">
		select u.user_id, u.realname, u.email, u.avatar, u.phone, u.password, u.sex, u.status, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark from sys_user u
		<where>
			<if test="sysUser.realname != null and sysUser.realname != ''">
				AND u.realname like concat('%', #{realname}, '%')
			</if>
			<if test="sysUser.status != null and sysUser.status != ''">
				AND u.status = #{sysUser.status}
			</if>
			<if test="sysUser.phone != null and sysUser.phone != ''">
				AND u.phone like concat('%', #{sysUser.phone}, '%')
			</if>
			<if test="sysUser.beginTime != null and sysUser.beginTime != ''"><!-- 开始时间检索 -->
				AND date_format(u.create_time,'%y%m%d') &gt;= date_format(#{sysUser.beginTime},'%y%m%d')
			</if>
			<if test="sysUser.endTime != null and sysUser.endTime != ''"><!-- 结束时间检索 -->
				AND date_format(u.create_time,'%y%m%d') &lt;= date_format(#{sysUser.endTime},'%y%m%d')
			</if>
		</where>
	</select>

	<select id="selectUserByUserName" parameterType="String" resultMap="SysUserResult">
	    <include refid="selectUserVo"/>
		where u.realname = #{userName} OR u.phone = #{userName}
	</select>

	<select id="selectUserById" parameterType="Long" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.user_id = #{userId}
	</select>

	<update id="updateUserAvatar" parameterType="SysUser">
 		update sys_user set avatar = #{avatar} where realname = #{userName}
	</update>

	<update id="resetUserPwd" parameterType="SysUser">
 		update sys_user set password = #{password} where realname = #{userName}
	</update>



</mapper>
